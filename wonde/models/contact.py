"""
Wonde API

API Docs  # noqa: E501

The version of the OpenAPI document: 1.0.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""


from __future__ import annotations

import json
import pprint
import re  # noqa: F401

from pydantic import BaseModel, Field, StrictStr


class Contact(BaseModel):
    """
    Contact
    """

    first_name: StrictStr | None = Field(None, description='First name of contact')
    last_name: StrictStr | None = Field(None, description='Last name of contact')
    phone_number: StrictStr | None = Field(None, description='Phone number of contact')
    email_address: StrictStr | None = Field(None, description='Email address of contact')
    notes: StrictStr | None = Field(None, description='Notes for the contact')
    __properties = ['first_name', 'last_name', 'phone_number', 'email_address', 'notes']

    class Config:
        """Pydantic configuration"""

        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Contact:
        """Create an instance of Contact from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True, exclude={}, exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> Contact:
        """Create an instance of Contact from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return Contact.parse_obj(obj)

        _obj = Contact.parse_obj(
            {
                'first_name': obj.get('first_name'),
                'last_name': obj.get('last_name'),
                'phone_number': obj.get('phone_number'),
                'email_address': obj.get('email_address'),
                'notes': obj.get('notes'),
            }
        )
        return _obj
