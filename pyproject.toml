[tool.poetry]
name = "pywonde"
version = "0.1.0"
description = "Wonde API"
authors = [
    "Matt Fisher <m@ttfisher.com>",
    "OpenAPI Generator Community <team@openapitools.org>"
]
license = "NoLicense"
readme = "README.md"
repository = "https://github.com/Edrolo/pywonde"
keywords = ["OpenAPI", "OpenAPI-Generator", "Wonde API"]

[tool.poetry.dependencies]
python = "^3.7"

urllib3 = ">= 1.25.3"
python-dateutil = ">=2.8.2"
pydantic = "^1.10.5, <2"
aenum = ">=3.1.11"

[tool.poetry.dev-dependencies]
pytest = ">=7.2.1"
tox = ">=3.9.0"
flake8 = ">=4.0.0"

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[tool.pylint.'MESSAGES CONTROL']
extension-pkg-whitelist = "pydantic"

[tool.blue]
line-length=100

[tool.ruff]
select = [
    # See: https://beta.ruff.rs/docs/rules/
    'F', # Pyflakes
    'E', # pycodestyle Error
#    'W', # pycodestyle Warning
    'I', # isort
    'UP', # pyupgrade
    'B', # flake8-bugbear
    'C4', # flake8-comprehensions
    'ICN', # flake8-import-conventions
    'RUF', # Ruff-specific rules
]
ignore = [
    'E501',  # line-too-long disabled for initial introduction
    'C408',  # UnnecessaryCollectionCall - nice to be able to use dict() syntax
    'B904',
    'UP030',
]
line-length = 100
target-version = "py37"
exclude = []

[tool.ruff.per-file-ignores]
"wonde/api_client.py" = ["RUF012"]  # Mutable class attributes should be annotated with `typing.ClassVar`

[tool.ruff.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
# Required for pydantic
keep-runtime-typing = true
